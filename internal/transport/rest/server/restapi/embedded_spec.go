// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "boilerplate-microservice",
    "version": "1.0"
  },
  "basePath": "/",
  "paths": {
    "/car": {
      "get": {
        "security": [],
        "description": "car by id",
        "summary": "return cars",
        "operationId": "car",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/car"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Argument",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/healthcheck": {
      "get": {
        "security": [],
        "summary": "health check",
        "operationId": "healthcheck",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "description": "status code",
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "car": {
      "type": "object",
      "required": [
        "id",
        "type",
        "manufacturer"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "manufacturer": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "id": {
      "type": "integer",
      "description": "car id",
      "name": "id",
      "in": "query",
      "required": true
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "boilerplate-microservice",
    "version": "1.0"
  },
  "basePath": "/",
  "paths": {
    "/car": {
      "get": {
        "security": [],
        "description": "car by id",
        "summary": "return cars",
        "operationId": "car",
        "parameters": [
          {
            "type": "integer",
            "description": "car id",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/car"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Argument",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/healthcheck": {
      "get": {
        "security": [],
        "summary": "health check",
        "operationId": "healthcheck",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "description": "status code",
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "car": {
      "type": "object",
      "required": [
        "id",
        "type",
        "manufacturer"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "manufacturer": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "id": {
      "type": "integer",
      "description": "car id",
      "name": "id",
      "in": "query",
      "required": true
    }
  }
}`))
}
